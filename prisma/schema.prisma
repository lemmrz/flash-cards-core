// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Card Card[]
  Deck Deck[]

  Subject Subject[]

  RefreshToken RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("refresh-tokens")
}

model Subject {
  id          Int      @id @default(autoincrement())
  name        String
  ownerId     Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  owner User   @relation(fields: [ownerId], references: [id])
  decks Deck[]

  @@map("subjects")
}

model Deck {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId      Int
  subjectId   Int

  user    User    @relation(fields: [ownerId], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])

  cards Card[]

  @@map("decks")
}

model Card {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ownerId    Int
  deckId    Int 
  imgUrl String?

  user User @relation(fields: [ownerId], references: [id])
  deck Deck @relation(fields: [deckId], references: [id])

  @@map("cards")
}
